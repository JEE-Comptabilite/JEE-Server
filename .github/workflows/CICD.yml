# Workflow of JEE-Server

name: CI/CD

on:
  push:
    paths-ignore:
      - '.github/**'
  pull_request:
    paths-ignore:
      - '.github/**'

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Checkout repository access
        uses: actions/checkout@v2 # Check if the workflow can access our repo

      - name: Set up Java 11 environment
        uses: actions/setup-java@v1 # Sets up a Java environment
        with:
          java-version: 11

      - name: Test with Maven
        run: mvn test

  build-dev:
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: self-hosted
    steps:
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build Docker image
        run: docker build . --tag jee-server:dev

  publish-dev-image:
    needs: build-dev
    runs-on: self-hosted
    steps:
      - name: Log-in on Docker repository
        env:
          DOCKERIO_USERNAME: ${{ secrets.DOCKERIO_USERNAME }}
          DOCKERIO_PASSWORD: ${{ secrets.DOCKERIO_PASSWORD }}  
        run: |
          docker login -u "$DOCKERIO_USERNAME" -p "$DOCKERIO_PASSWORD"

      - name: Tag of the new image
        run: docker tag jee-server:dev alexandrebis/4al2-jee-project:dev

      - name: Push of the new image
        run: docker push alexandrebis/4al2-jee-project:dev

  deploy-dev:
    needs: build-dev
    runs-on: self-hosted
    steps:
      - name: Stop previous Docker image
        run:  (docker stop jee-server || echo "Container already stopped") && (docker rm jee-server || echo "Image already removed")

      - name: Launch new Docker image
        env:
          AUTHENTIFICATION_DATABASE: ${{ secrets.DEV_MONGO_AUTHENTIFICATION_DATABASE }}
          DB_USERNAME: ${{ secrets.DEV_MONGO_USERNAME }}
          DB_PASSWORD: ${{ secrets.DEV_MONGO_PASSWORD }}
          DB_NAME: ${{ secrets.DEV_MONGO_DATABASE }}
          DB_PORT: ${{ secrets.DEV_MONGO_PORT }}
          DB_HOST: ${{ secrets.DEV_MONGO_HOST }}
        run: |
          docker run -d -p 8080:8080 -e AUTHENTIFICATION_DATABASE -e DB_USERNAME -e DB_PASSWORD -e DB_NAME -e DB_PORT -e DB_HOST --name "jee-server" jee-server:dev

  build-prod:
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: self-hosted
    steps:
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build Docker image
        run: docker build . --tag jee-server:prod

  publish-prod-image:
    needs: build-prod
    runs-on: self-hosted
    steps:
      - name: Log-in on Docker repository
        env:
          DOCKERIO_USERNAME: ${{ secrets.DOCKERIO_USERNAME }}
          DOCKERIO_PASSWORD: ${{ secrets.DOCKERIO_PASSWORD }}
        run: |
          docker login -u "$DOCKERIO_USERNAME" -p "$DOCKERIO_PASSWORD"

      - name: Tag of the new image
        run: docker tag jee-server:prod alexandrebis/4al2-jee-project:prod

      - name: Push of the new image
        run: docker push alexandrebis/4al2-jee-project:prod

  deploy-prod:
    needs: [build-prod, publish-prod-image]
    runs-on: self-hosted
    steps: 
      - name: TODO
        run: echo "TODO Deploy the image to Beanstalk"
        
      - name: Initialize env vars
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1" 
          AUTHENTIFICATION_DATABASE: ${{ secrets.DEV_MONGO_AUTHENTIFICATION_DATABASE }}
          DB_USERNAME: ${{ secrets.DEV_MONGO_USERNAME }}
          DB_PASSWORD: ${{ secrets.DEV_MONGO_PASSWORD }}
          DB_NAME: ${{ secrets.DEV_MONGO_DATABASE }}
          DB_PORT: ${{ secrets.DEV_MONGO_PORT }}
          DB_HOST: ${{ secrets.DEV_MONGO_HOST }}
        uses: hmanzur/actions-aws-eb@v1
        with:
          command: 'setenv AUTHENTIFICATION_DATABASE=AUTHENTIFICATION_DATABASE && setenv DB_USERNAME=DB_USERNAME && setenv DB_PASSWORD=DB_PASSWORD && setenv DB_NAME=DB_NAME && setenv DB_PORT=DB_PORT && setenv DB_HOST=DB_HOST'
        
      - name: Deploy on EB
        uses: hmanzur/actions-aws-eb@v1
        with:
          command: 'deploy ${{ secrets.ENVIRONMENT_NAME }}'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"        
